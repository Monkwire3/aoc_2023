{"message":"return types are denoted using `->`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":175,"byte_end":176,"line_start":9,"line_end":9,"column_start":65,"column_end":66,"is_primary":true,"text":[{"text":"fn compare_lines(parts: Vec<Part>, symbols: Vec<(usize, usize)>):","highlight_start":65,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `->` instead","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":175,"byte_end":176,"line_start":9,"line_end":9,"column_start":65,"column_end":66,"is_primary":true,"text":[{"text":"fn compare_lines(parts: Vec<Part>, symbols: Vec<(usize, usize)>):","highlight_start":65,"highlight_end":66}],"label":null,"suggested_replacement":"->","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: return types are denoted using `->`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:9:65\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compare_lines(parts: Vec<Part>, symbols: Vec<(usize, usize)>):\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: use `->` instead\u001b[0m\n\n"}
{"message":"expected `(`, found `parse_text`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":182,"byte_end":192,"line_start":12,"line_end":12,"column_start":4,"column_end":14,"is_primary":true,"text":[{"text":"fn parse_text(str_input: &str) -> (Vec<Part>, Vec<(usize, usize)>) {","highlight_start":4,"highlight_end":14}],"label":"expected `(`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `(`, found `parse_text`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:12:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn parse_text(str_input: &str) -> (Vec<Part>, Vec<(usize, usize)>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `(`\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
